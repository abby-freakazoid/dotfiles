# known bad settings on amd desktop
# hwdec   = 'auto'
# hwdec   = 'auto-copy'
# gpu-api = 'vulkan'

# subs2srs makes mpv unable to display subs

# can also use Q instead of q to quit for this:
save-position-on-quit

input-ipc-server = /tmp/mpvsocket
# hwdec            = vaapi
# hwdec-codecs     = all

profile          = gpu-hq

# profiles sometimes disable these
terminal     = yes  # enable terminal output
force-window = yes  # force gui

# audio filter = normalization
af             = "lavfi=[firequalizer=gain_entry='entry(0,0);entry(3000,0);entry(9500,0);entry(12000,-2);entry(15000,-7.5);entry(20000,-INF)'],lavfi=[dynaudnorm=g=5:f=250:r=0.9:p=0.5]"
force-seekable = yes
# keep-open      = always  # normally closes on playback complete
# ^ bug. above paused after playback
# osd-duration   = 650
# osd-font-size  = 100
# osd-scale-by-window = no

# speed      = 1.1  # I like 1.1×. but this a bad idea, unless i can autodetect music and turn this off
volume     = 100  # volume = 50% at startup
volume-max = 100  # can be set higher than 100 (enables software amp)

# I arrange my windows in columns: 1080 / 2 = 540
ytdl-format    = bestvideo[height<=?1080]+bestaudio/best

# 1 MiB = 1048576 Bytes
demuxer-max-bytes      = 150000000  # max buffer ahead + back (unless donate no)
demuxer-max-back-bytes =  75000000  # max buffer back
# equates @ SD to roughly
# 35 mins ahead
# 18 mins back
# for a total of 53 mins buffer

# Audio and Subtitle Languages

## Normal

alang = 'deDE,de,deu,enUS,en,eng'
slang = 'deDE,de,deu,enUS,en,eng'

## Anime

# alang = 'jpJP,jp,jpn,enUS,en,eng,deDE,de,deu'
# slang = 'deDE,de,deu,enUS,en,eng'


# Image Correction

# denoise = 1  # not really necessary for normal content

## Anti Color Banding (Dithering)

# 1, 64, 16, 48  default
# 2, 35, 20,  5  recommended
# 3, 45, 25, 15  lofi
# 4, 60, 30, 30  really lofi

deband            = yes
deband-iterations =  2  # 1 -   16; higher = better but more load; >5 is redundant
deband-threshold  = 35  # 0 - 4096; deband strength
deband-range      = 20  # 1 -   64; range of deband; too high destroys details
deband-grain      =  5  # 0 - 4096; noise strength
dither-depth      = auto

# demuxer-mkv-subtitle-preroll=yes
#sub-ass-vsfilter-blur-compat=yes
#sub-fix-timing=yes
#sub-gauss=0.5 # Blur PGS subs.
#sub-gray=yes # Monochrome subs (makes yellow font grey).
# Allow loading external subs that do not match file name perfectly.
#sub-auto=fuzzy
#sub-font='Trebuchet MS'
#sub-bold=yes # Set the font to bold.
#sub-font-size=55 # Set default subtitle size if not specified.

# Advanced Video Scaling Config
# Internal Scalers

# Note: Press shift + I in mpv to view frame drops. Then press 2 to view frame times and processing layers. Make sure your config does not drop frames and ideally frame times should be <25ms.

# scale is the luma upscale method. Prioritize resource on this over cscale.
# dscale luma downscale method.
# cscale chroma upscale method. Human eyes aren’t as sensitive to chroma compared to luma.

# If you enabled profile=gpu-hq:

# #Scaling algorithm for profile=gpu-hq
# scale=spline36
# dscale=mitchell
# cscale=spline36

# Default gpu-hq should be sufficient for most people, however, here are some suggestions for fine tuning:

# I have a Toaster (crappy PC) edition:

# scale=bilinear # Set spline16 if possible.
# dscale=mitchell
# cscale=bilinear

# I have an iGPU laptop edition:

# scale=spline36
# dscale=mitchell
# cscale=mitchell

# I have a decent GPU (GTX 1050+) edition:

# scale=ewa_lanczossharp
# dscale=mitchell
# cscale=spline36 # alternatively ewa_lanczossoft depending on preference

# External Shaders

# For those who have really good GPUs (GTX 1060+, sometimes need even better GPU) and want to run external shaders:

# Remember to download the shader files and put them in the mpv config folder! ~~/xxx.glsl refers to xxx.glsl file in the mpv config directory.

# Always enable profile=gpu-hq before using shaders for fallback.

# Dynamic Scaler: SSSR
# SSSR is a dynamic scaler that improves built-in scalers utilizing structure similarity. Upscale result varies widely depending on your scaler. You may freely choose your preferred one. Moderate to highly GPU intensive.

# For a sharper image:

# profile=gpu-hq
# glsl-shader="~~/SSimSuperRes.glsl" # Set B C parameter to Robidoux.
# scale=ewa_lanczossharp
# dscale=mitchell
# cscale=spline64

# Alternatively set to haasnsoft for a softer look (much better at artifact/aliasing supression). I found this combo to be very good for anime and performs close to NN based upscalers.

# profile=gpu-hq
# glsl-shader="~~/SSimSuperRes.glsl" # Set B C parameter to Mitchell.
# scale=haasnsoft
# dscale=mitchell
# cscale=ewa_lanczossoft

# If you really want to run SSSR on a lower-end GPU, the full power version of MX150 (1D10 25W) should be able to run it if you use the faster algorithms. Results will still be better than spline36. Use bilinear/spline16/spline36 (whichever your GPU can handle without dropping frames) for a sharper image. For anime, if you want a softer anti-aliasing look like haasnsoft, use bicubic.

# glsl-shader="~~/SSimSuperRes.glsl" # Set B C parameter to Robidoux for sharper image, else use Mitchell (slightl sharper) or Catrom (default).
# scale=bicubic # or bilinear or spline16/36
# dscale=mitchell
# cscale=mitchell

# You can modify the SSSR shader’s cubic B and C parameters (on line 31 and 79) to your needs. Default is Catrom (0,1/2). Set to Mitchell (1/3,1/3) or even Robidoux (0.3782,0.3109) for a sharper image. See this graph.

# 2x Pre-Scaler: Neural Network Scalers
# Some of these shaders require high-end GPUs to run smoothly. 2x pre-scaler means they scale a fixed 2x and should only be used if you have a 4K monitor (1080p x2 = 4K). For NN upscalers, more neurons = better quality but significantly more computational power.
# Always activate profile=gpu-hq first.

# profile=gpu-hq

# Choose 1 of the 2x pre-scalers:

#     FSRCNNX is very good for general use / real-life content, may amplify artifacts (due to it being true to its source). Requires good source material. MadVR equivalent would be NGU-Sharp. Very GPU intensive.

# glsl-shader="~~/FSRCNNX_x2_8-0-4-1.glsl"

#     RAVU Lite is relatively lightweight and decent for anime due to the lite version being sharper. I would use SSSR over this due to SSSR being better imo. Moderately GPU intensive.

# glsl-shader="~~/ravu-lite-r4.hook"

#     NNEDI3 is designed for anime use. Result is very close to MadVR’s NGU-AA. Very GPU intensive.

# glsl-shader="~~/nnedi3-nns32-win8x6.hook"

# Remaining:

# dscale=mitchell
# cscale=spline64 # or ewa_lanczossoft (or your choice, really)

# Dynamic Scaler for Anime: Anime4K
# Anime4K is a unique upscaler + shader designed for Anime. It used to be very destructive, sharpens lines for a… unique “visual quality” look. It works extremely well in some anime and eh in others. Definitely isn’t for everyone. Version 0.9 had lots of flaws (mainly texture banding and line bloating). 1.0RC fixes a lot of the flaws (mainly bad banding) at the cost of doubling GPU consumption. 1.0RC2 optimized GPU usage (even more effecient than 0.9, 1080p > 4K should just barely run on a GTX 1030) and also introduced 2 more speed profiles for even weaker systems (supposedly the fastest profile can run on iGPUs at the cost of shader quality).

# The latest 1.0RC2 tones down the “filtered look” even more and serves as an upscaler + filter of {line thinning + line smoothening + sharpening} + artifact/texture-denoiser (reduces jpeg-like edges) combo (note: filter only active when upscaling). One down side to Anime4K compared to other upscalers is that due to line thinning, anime with bad aliasing effects looks even worse (stares at badly made isekai anime magic circles).

# profile=gpu-hq
# glsl-shader="~~/Anime4K_Adaptive_v1.0RC2.glsl"
# dscale=mitchell
# cscale=mitchell

# For those interested in higher quality downscale:
# SSIM downscaler is tuned to be used with mitchell. However, you shouldn’t be downscaling in the first place so just having dscale=mitchell fallback should be good enough.

# glsl-shader="~~/SSimDownscaler.glsl" 
# dscale=mitchell
# linear-downscaling=no

# For those inteested in higher quality chroma upscale:
# Imo cscale=spline36 is already very good. Human eyes aren’t that sensitive to Chroma compared to Luma. I won’t be surprised if you can’t even tell the difference when simply using cscale=mitchell. However, if you just want the best of the best and have the extra processing power, KrigBilateral is a high quality Chroma upscaler.

# glsl-shader="~~/KrigBilateral.glsl"

# I always advise testing out settings yourself, “quality” is extremely subjective. For example, in anime, destructive filters (denoise/de-ring/sharpen) upscalers may “look better” visually but not necessarily be true to its source (lower SSIM/PSNR).

# If we go purely by measurement, haasnsoft should be a terrible upscaler (and it kinda is with normal content). However, when paired properly with SSSR it looks great in anime. Similarly, NNEDI3 looks better with Anime (as it’s trained for such) despite FSRCNNX is the technically better (accurate) upscaler.

# Anime “visual quality” greatly favors algorithms that de-aliases, denoises and sharpens lines to be defined. This is why Anime4K is such a controversial upscaler as it takes these concepts to an extreme.

# In terms of algorithm quality (Note: better quality usually = more GPU usage):

# abc = abc built-in shader
# [xyz] = xyz external shader (requires downloading glsl/hook files)

# For scale:
# [NNEDI3] or [FRCNNX] > [SSimSuperRes + haasnsoft/ewa_lanczossharp] > ewa_lanczossharp > spline36 > spline16 > bilinear
#                 <---------------------[Anime4K 1.0RC2] (personal preference)--------------------->

# For dscale:
# [SSimDownscaler] > Mitchell

# For cscale:
# [KrigBilateral] > spline64 / ewa_lanczossoft / spline36 > mitchell

# Upscalers Demo (totally not stolen):
# Open in new tab to view full size.
# 2x upscale from 100×54 to 200×108 image (Source: DanMachi).
# NNS = nearest neighbor (also interger upscale in this case, essentially original image). mpv default is bilinear. Anime4K shown is older 1.0RC ver.

# ytdl_path="yt-dlp"  # youtube-dl is dead

# script_opts=ytdl_hook-ytdl_path=yt-dlp
